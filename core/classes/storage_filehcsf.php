<?php

namespace Core\Flame\Storage;

use Core\Base\Base;

class FileHeaderControlSpecialFiles extends Base {

     private string $headerFilePattern = '.{saveName}.h.php';
     private static $storePath;

     public static function boot():void {
          if($path = _env('STORE_PATH', false)) {
               static::$storePath = substr(endStrSlash($path), 0, -1);
          }
     }

     public function Config_EditHeaderPattern(string $pattern = '.{saveName}.h.php') {
          $this->headerFilePattern = $pattern;
     }
     
     public function get(array|string $saveNames) {
          if(!is_array($saveNames)) $saveNames = array($saveNames);
          $datas = array();
          foreach($saveNames as $name) {
               $file = static::$storePath . startStrSlash(str_replace('{saveName}', $name, $this->headerFilePattern));
               if(file_exists($file)) {
                    $datas[$name] = require $file;
               }
          }
          return $datas;
     }

     public function set(string $saveName, array $data) {
          $data = (object) $data;
          $dataName = str_replace('{saveName}', $saveName, $this->headerFilePattern);
          $save = file_put_contents(
               static::$storePath . startStrSlash($dataName),
               "<?php\n\n// <auto-generated title=\"Please do not edit!\" />\nreturn " . var_export($data, true) . ";"
          );
          return $save !== false;
     }

}