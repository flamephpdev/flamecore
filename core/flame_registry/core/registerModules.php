<?php

namespace Core\Flame\Registry;

class Registry {

     public static function register() {
          $registered = [];
          $dir = '/flame_registry/';
          if(_env('APP_DEV') || (!is_dir(cache($dir)) || !file_exists(cache($dir . 'registry.php')))) {
               createPath(cache($dir));
               $registries = self::getRegistries(require_once __DIR__ . '/../registry.php');
               foreach($registries as $folder) {
                    if($files = getDirContents($folder)) {
                         foreach($files as $file) {
                              if(!is_dir($file) && !in_array($file, $registered)) {
                                   $registered[] = $file;
                                   include_once $file;
                              }
                         }
                    }
               }
               file_put_contents(cache($dir . 'registry.php'), "<?php\n// <auto-generated/>\n//Please DO NOT EDIT\n\nreturn " . var_export($registered, true) . ';' . "\n\n// " . date('Y-m-d H:i:s'));
          }
          if(empty($registered)) {
               foreach(require_once cache($dir . 'registry.php') as $file) {
                    include_once $file;
               }
          }
     }

     private static function getRegistries(array $reg): array {
          $created = [];
          foreach($reg as $registry) {
               if(str_ends_with($registry, '~')) {
                    $created = array_merge($created, self::getRegistries(include_once str_replace('~', 'registry.php', $registry)));
               } else $created[] = $registry;
          }
          return $created;
     }

}

Registry::register();